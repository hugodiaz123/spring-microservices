services:
  postgres-customer:
    container_name: postgres-customer
    image: postgres:16.1
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres-customer
    volumes:
      - postgres-customer:/data/postgres-customer
    ports:
      - "5444:5432"
    networks:
      - postgres-microservices
      - spring
    restart: unless-stopped

  customer-service:
    container_name: customer-service
    image: hugodiaz/customer:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-customer:5432/customer
      - SPRING_DATASOURCE_USERNAME=amigoscode
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-customer
      - zipkin
      - rabbitmq
    networks:
      - postgres-microservices
      - spring
    ports:
      - "8080:8080"
    restart: unless-stopped

  postgres-fraud:
    container_name: postgres-fraud
    image: postgres:16.1
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres-fraud
    volumes:
      - postgres-fraud:/data/postgres-fraud
    ports:
      - "5445:5432"
    networks:
      - postgres-microservices
      - spring
    restart: unless-stopped

  fraud-service:
    container_name: fraud-service
    image: hugodiaz/fraud:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-fraud:5432/fraud
      - SPRING_DATASOURCE_USERNAME=amigoscode
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-fraud
      - zipkin
      - rabbitmq
    networks:
      - postgres-microservices
      - spring
    ports:
      - "8081:8080"
    restart: unless-stopped

  postgres-notification:
    container_name: postgres-notification
    image: postgres:16.1
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres-notification
    volumes:
      - postgres-notification:/data/postgres-notification
    ports:
      - "5446:5432"
    networks:
      - postgres-microservices
      - spring
    restart: unless-stopped

  notification-service:
    container_name: notification-service
    image: hugodiaz/notification:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-notification:5432/notification
      - SPRING_DATASOURCE_USERNAME=amigoscode
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-notification
      - zipkin
      - rabbitmq
    networks:
      - postgres-microservices
      - spring
    ports:
      - "8082:8080"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin-microservices
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin-microservices
    ports:
      - "5051:80"
    networks:
      - postgres-microservices
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring

#  eureka-server:
#    image: hugodiaz/eureka-server:latest
#    container_name: eureka-server
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#
#  apigw:
#    image: hugodiaz/apigw:latest
#    container_name: apigw
#    ports:
#      - "8083:8083"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#      - eureka-server

networks:
  postgres-microservices:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres-customer:
  postgres-fraud:
  postgres-notification:
  pgadmin: